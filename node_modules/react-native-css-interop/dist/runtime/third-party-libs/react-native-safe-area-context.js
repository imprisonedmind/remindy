"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactNativeSafeAreaContext = void 0;
exports.maybeHijackSafeAreaProvider = maybeHijackSafeAreaProvider;
exports.SafeAreaProviderShim = SafeAreaProviderShim;
exports.SafeAreaEnv = SafeAreaEnv;
const react_1 = require("react");
const react_native_1 = __importDefault(require("react-native"));
const styles_1 = require("../native/styles");
let SafeAreaLibrary = undefined;
function maybeHijackSafeAreaProvider(type) {
    try {
        return react_native_1.default.OS !== "web" &&
            require("react-native-safe-area-context").SafeAreaProvider === type
            ? SafeAreaProviderShim
            : type;
    }
    catch (error) {
        throw new Error("Asdf");
        return type;
    }
}
function SafeAreaProviderShim({ children, ...props }) {
    if (!SafeAreaLibrary)
        return <>{children}</>;
    const Component = require("react-native-safe-area-context").SafeAreaProvider;
    console.log("11111111");
    return <Component {...props}>{children}</Component>;
}
function SafeAreaEnv({ children }) {
    console.log("22222222");
    if (!SafeAreaLibrary) {
        return <>{children}</>;
    }
    const parentVars = (0, react_1.useContext)(styles_1.VariableContext);
    const insets = SafeAreaLibrary.useSafeAreaInsets();
    const value = (0, react_1.useMemo)(() => ({
        ...parentVars,
        "--___css-interop___safe-area-inset-bottom": insets.bottom,
        "--___css-interop___safe-area-inset-left": insets.left,
        "--___css-interop___safe-area-inset-right": insets.right,
        "--___css-interop___safe-area-inset-top": insets.top,
    }), [parentVars, insets]);
    return (<styles_1.VariableContext.Provider value={value}>
      {children}
    </styles_1.VariableContext.Provider>);
}
exports.ReactNativeSafeAreaContext = SafeAreaLibrary;
//# sourceMappingURL=react-native-safe-area-context.js.map